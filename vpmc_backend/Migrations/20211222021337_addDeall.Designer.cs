// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using vpmc_backend.Models;

namespace vpmc_backend.Migrations
{
    [DbContext(typeof(WebApiContext))]
    [Migration("20211222021337_addDeall")]
    partial class addDeall
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("vpmc_backend.Models.BuildingAppraisalObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Object")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Building_AppraisalObject");
                });

            modelBuilder.Entity("vpmc_backend.Models.BuildingAssetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Building_AssetType");
                });

            modelBuilder.Entity("vpmc_backend.Models.BuildingBuildingRightsStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Building_BuildingRightsStatus");
                });

            modelBuilder.Entity("vpmc_backend.Models.BuildingBuildingStructure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Structure")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Building_BuildingStructure");
                });

            modelBuilder.Entity("vpmc_backend.Models.BuildingBuildingUsage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Usage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Building_BuildingUsage");
                });

            modelBuilder.Entity("vpmc_backend.Models.BuildingEvaluationRightsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Building_EvaluationRightsType");
                });

            modelBuilder.Entity("vpmc_backend.Models.BuildingLandRightsStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Building_LandRightsStatus");
                });

            modelBuilder.Entity("vpmc_backend.Models.BuildingPriceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Building_PriceType");
                });

            modelBuilder.Entity("vpmc_backend.Models.BuildingSurveyDataSheet", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AppraisalCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AppraisalDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AppraisalObjectId")
                        .HasColumnType("int");

                    b.Property<int>("AssetTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BuildAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildAddressCounty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildAddressVillage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildMarkCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildMarkCounty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildMarkName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildMarkVillage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("BuildingArea")
                        .HasColumnType("float");

                    b.Property<double>("BuildingCoverageRatio")
                        .HasColumnType("float");

                    b.Property<int>("BuildingDownFloor")
                        .HasColumnType("int");

                    b.Property<DateTime>("BuildingFinishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BuildingRightsHolding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingRightsOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BuildingRightsStatusId")
                        .HasColumnType("int");

                    b.Property<int>("BuildingStructureId")
                        .HasColumnType("int");

                    b.Property<int>("BuildingUpFloor")
                        .HasColumnType("int");

                    b.Property<int>("BuildingUsageId")
                        .HasColumnType("int");

                    b.Property<int>("EvaluationRightsTypeId")
                        .HasColumnType("int");

                    b.Property<double>("FloorAreaRatio")
                        .HasColumnType("float");

                    b.Property<DateTime>("InspectionDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("LandArea")
                        .HasColumnType("float");

                    b.Property<string>("LandMarkCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandMarkCounty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandMarkName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandMarkVillage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandRightsHolding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandRightsOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LandRightsStatusId")
                        .HasColumnType("int");

                    b.Property<string>("LandUses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherRights")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PriceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("SurveyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SurveyFloor")
                        .HasColumnType("int");

                    b.Property<string>("SurveyorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranscriptPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ValueOpinionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppraisalObjectId");

                    b.HasIndex("AssetTypeId");

                    b.HasIndex("BuildingRightsStatusId");

                    b.HasIndex("BuildingStructureId");

                    b.HasIndex("BuildingUsageId");

                    b.HasIndex("EvaluationRightsTypeId");

                    b.HasIndex("LandRightsStatusId");

                    b.HasIndex("PriceTypeId");

                    b.ToTable("BuildingSurveyDataSheet");
                });

            modelBuilder.Entity("vpmc_backend.Models.Deal", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("BathNumber")
                        .HasColumnType("smallint");

                    b.Property<short?>("BedNumber")
                        .HasColumnType("smallint");

                    b.Property<float?>("BelconyArea")
                        .HasColumnType("real");

                    b.Property<string>("BuildingMaterial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("BuildingShiftingArea")
                        .HasColumnType("real");

                    b.Property<string>("BuildingState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("BuildingTransactionAmount")
                        .HasColumnType("smallint");

                    b.Property<string>("CompletionDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CoordinateX")
                        .HasColumnType("int");

                    b.Property<int?>("CoordinateY")
                        .HasColumnType("int");

                    b.Property<short?>("HallNumber")
                        .HasColumnType("smallint");

                    b.Property<string>("HasCompartmented")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HasElevator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HasManageOrganization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("LandShiftingArea")
                        .HasColumnType("real");

                    b.Property<short?>("LandTransactionAmount")
                        .HasColumnType("smallint");

                    b.Property<string>("LandUse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("MainBuildingArea")
                        .HasColumnType("real");

                    b.Property<string>("MainUse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NonMetroLandUse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NonMetroLandUseDistrict")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParkCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("ParkShiftingArea")
                        .HasColumnType("real");

                    b.Property<int?>("ParkTotalPrice")
                        .HasColumnType("int");

                    b.Property<short?>("ParkTransactionAmount")
                        .HasColumnType("smallint");

                    b.Property<int?>("ParsedShiftingLevel")
                        .HasColumnType("int");

                    b.Property<string>("ShiftingLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("SubBuildingArea")
                        .HasColumnType("real");

                    b.Property<short?>("TotalFloorNumber")
                        .HasColumnType("smallint");

                    b.Property<int?>("TotalPrice")
                        .HasColumnType("int");

                    b.Property<string>("Town")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionSign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("UnitPrice")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Deal");
                });

            modelBuilder.Entity("vpmc_backend.Models.Deal_Manage", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("BathNumber")
                        .HasColumnType("smallint");

                    b.Property<short?>("BedNumber")
                        .HasColumnType("smallint");

                    b.Property<float?>("BelconyArea")
                        .HasColumnType("real");

                    b.Property<string>("BuildingArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingHeight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingMaterial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("BuildingShiftingArea")
                        .HasColumnType("real");

                    b.Property<string>("BuildingState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("BuildingTransactionAmount")
                        .HasColumnType("smallint");

                    b.Property<string>("BuildingType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompletionDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstructionAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstructionEnd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstructionParcel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstructionStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contractor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CoordinateX")
                        .HasColumnType("int");

                    b.Property<int?>("CoordinateY")
                        .HasColumnType("int");

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("DesignChanged")
                        .HasColumnType("smallint");

                    b.Property<string>("Designer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("FloorAbove")
                        .HasColumnType("smallint");

                    b.Property<string>("FloorBelow")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FloorSummary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("HallNumber")
                        .HasColumnType("smallint");

                    b.Property<string>("HasCompartmented")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HasElevator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HasManageOrganization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssuedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("LandShiftingArea")
                        .HasColumnType("real");

                    b.Property<short?>("LandTransactionAmount")
                        .HasColumnType("smallint");

                    b.Property<string>("LandUse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Latitude")
                        .HasColumnType("real");

                    b.Property<string>("LicenseGiven")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseRecordNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicensedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicensedRecord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Longitude")
                        .HasColumnType("real");

                    b.Property<float?>("MainBuildingArea")
                        .HasColumnType("real");

                    b.Property<string>("MainUse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManageAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Misc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NonMetroLandUse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NonMetroLandUseDistrict")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OirgLicenseGiven")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpenArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParkCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("ParkShiftingArea")
                        .HasColumnType("real");

                    b.Property<int?>("ParkTotalPrice")
                        .HasColumnType("int");

                    b.Property<short?>("ParkTransactionAmount")
                        .HasColumnType("smallint");

                    b.Property<string>("ParkingSpace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParsedShiftingLevel")
                        .HasColumnType("int");

                    b.Property<string>("Representative")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftingLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StructureType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("SubBuildingArea")
                        .HasColumnType("real");

                    b.Property<string>("Supervision")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalFloorArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("TotalFloorNumber")
                        .HasColumnType("smallint");

                    b.Property<int?>("TotalPrice")
                        .HasColumnType("int");

                    b.Property<string>("Town")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionSign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UndergroundArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("UnitPrice")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Deal_Manage");
                });

            modelBuilder.Entity("vpmc_backend.Models.LandAppraisalObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Object")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Land_AppraisalObject");
                });

            modelBuilder.Entity("vpmc_backend.Models.LandAssetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Land_AssetType");
                });

            modelBuilder.Entity("vpmc_backend.Models.LandEvaluationRightsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Land_EvaluationRightsType");
                });

            modelBuilder.Entity("vpmc_backend.Models.LandLandRightsStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Land_LandRightsStatus");
                });

            modelBuilder.Entity("vpmc_backend.Models.LandPriceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Land_PriceType");
                });

            modelBuilder.Entity("vpmc_backend.Models.LandSurveyDataSheet", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AppraisalCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AppraisalDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AppraisalObjectId")
                        .HasColumnType("int");

                    b.Property<int>("AssetTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BuildAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildAddressCounty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildAddressVillage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildMarkCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildMarkCounty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildMarkName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildMarkVillage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("BuildingCoverageRatio")
                        .HasColumnType("float");

                    b.Property<int>("EvaluationRightsTypeId")
                        .HasColumnType("int");

                    b.Property<double>("FloorAreaRatio")
                        .HasColumnType("float");

                    b.Property<DateTime>("InspectionDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("LandArea")
                        .HasColumnType("float");

                    b.Property<string>("LandMarkCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandMarkCounty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandMarkName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandMarkVillage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandRightsHolding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandRightsOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LandRightsStatusId")
                        .HasColumnType("int");

                    b.Property<string>("LandUses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherRights")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PriceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("SurveyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurveyorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranscriptPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ValueOpinionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppraisalObjectId");

                    b.HasIndex("AssetTypeId");

                    b.HasIndex("EvaluationRightsTypeId");

                    b.HasIndex("LandRightsStatusId");

                    b.HasIndex("PriceTypeId");

                    b.ToTable("LandSurveyDataSheet");
                });

            modelBuilder.Entity("vpmc_backend.Models.ParkAppraisalObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Object")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Park_AppraisalObject");
                });

            modelBuilder.Entity("vpmc_backend.Models.ParkAssetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Park_AssetType");
                });

            modelBuilder.Entity("vpmc_backend.Models.ParkAssignMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Method")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ParkAssignMethod");
                });

            modelBuilder.Entity("vpmc_backend.Models.ParkBuildingRightsStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Park_BuildingRightsStatus");
                });

            modelBuilder.Entity("vpmc_backend.Models.ParkBuildingStructure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Structure")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Park_BuildingStructure");
                });

            modelBuilder.Entity("vpmc_backend.Models.ParkBuildingUsage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Usage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Park_BuildingUsage");
                });

            modelBuilder.Entity("vpmc_backend.Models.ParkEvaluationRightsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Park_EvaluationRightsType");
                });

            modelBuilder.Entity("vpmc_backend.Models.ParkLandRightsStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Park_LandRightsStatus");
                });

            modelBuilder.Entity("vpmc_backend.Models.ParkMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Method")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ParkMethod");
                });

            modelBuilder.Entity("vpmc_backend.Models.ParkPriceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Park_PriceType");
                });

            modelBuilder.Entity("vpmc_backend.Models.ParkSurveyDataSheet", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("AllowSuv")
                        .HasColumnType("bit");

                    b.Property<string>("AppraisalCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AppraisalDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AppraisalObjectId")
                        .HasColumnType("int");

                    b.Property<int>("AssetTypeId")
                        .HasColumnType("int");

                    b.Property<int>("AssignMethodId")
                        .HasColumnType("int");

                    b.Property<string>("BuildAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildAddressCounty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildAddressVillage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildMarkCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildMarkCounty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildMarkName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildMarkVillage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("BuildingCoverageRatio")
                        .HasColumnType("float");

                    b.Property<int>("BuildingDownFloor")
                        .HasColumnType("int");

                    b.Property<DateTime>("BuildingFinishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BuildingRightsHolding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingRightsOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BuildingRightsStatusId")
                        .HasColumnType("int");

                    b.Property<int>("BuildingStructureId")
                        .HasColumnType("int");

                    b.Property<int>("BuildingUpFloor")
                        .HasColumnType("int");

                    b.Property<int>("BuildingUsageId")
                        .HasColumnType("int");

                    b.Property<int>("EvaluationRightsTypeId")
                        .HasColumnType("int");

                    b.Property<double>("FloorAreaRatio")
                        .HasColumnType("float");

                    b.Property<DateTime>("InspectionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LandMarkCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandMarkCounty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandMarkName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandMarkVillage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandRightsHolding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandRightsOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LandRightsStatusId")
                        .HasColumnType("int");

                    b.Property<string>("LandUses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherRights")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ParkArea")
                        .HasColumnType("float");

                    b.Property<double>("ParkHeight")
                        .HasColumnType("float");

                    b.Property<int>("ParkMethodId")
                        .HasColumnType("int");

                    b.Property<int>("ParkTypeId")
                        .HasColumnType("int");

                    b.Property<double>("ParkWidth")
                        .HasColumnType("float");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PriceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("SurveyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SurveyFloor")
                        .HasColumnType("int");

                    b.Property<string>("SurveyorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranscriptPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ValueOpinionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppraisalObjectId");

                    b.HasIndex("AssetTypeId");

                    b.HasIndex("AssignMethodId");

                    b.HasIndex("BuildingRightsStatusId");

                    b.HasIndex("BuildingStructureId");

                    b.HasIndex("BuildingUsageId");

                    b.HasIndex("EvaluationRightsTypeId");

                    b.HasIndex("LandRightsStatusId");

                    b.HasIndex("ParkMethodId");

                    b.HasIndex("ParkTypeId");

                    b.HasIndex("PriceTypeId");

                    b.ToTable("ParkSurveyDataSheet");
                });

            modelBuilder.Entity("vpmc_backend.Models.ParkType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ParkType");
                });

            modelBuilder.Entity("vpmc_backend.Models.BuildingSurveyDataSheet", b =>
                {
                    b.HasOne("vpmc_backend.Models.BuildingAppraisalObject", "AppraisalObject")
                        .WithMany("SurveyDataSheet")
                        .HasForeignKey("AppraisalObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vpmc_backend.Models.BuildingAssetType", "AssetType")
                        .WithMany("SurveyDataSheet")
                        .HasForeignKey("AssetTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vpmc_backend.Models.BuildingBuildingRightsStatus", "BuildingRightsStatus")
                        .WithMany("SurveyDataSheet")
                        .HasForeignKey("BuildingRightsStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vpmc_backend.Models.BuildingBuildingStructure", "BuildingStructure")
                        .WithMany("SurveyDataSheet")
                        .HasForeignKey("BuildingStructureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vpmc_backend.Models.BuildingBuildingUsage", "BuildingUsage")
                        .WithMany("SurveyDataSheets")
                        .HasForeignKey("BuildingUsageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vpmc_backend.Models.BuildingEvaluationRightsType", "EvaluationRightsType")
                        .WithMany("SurveyDataSheets")
                        .HasForeignKey("EvaluationRightsTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vpmc_backend.Models.BuildingLandRightsStatus", "LandRightsStatus")
                        .WithMany("SurveyDataSheets")
                        .HasForeignKey("LandRightsStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vpmc_backend.Models.BuildingPriceType", "PriceType")
                        .WithMany("SurveyDataSheets")
                        .HasForeignKey("PriceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("vpmc_backend.Models.LandSurveyDataSheet", b =>
                {
                    b.HasOne("vpmc_backend.Models.LandAppraisalObject", "AppraisalObject")
                        .WithMany("SurveyDataSheet")
                        .HasForeignKey("AppraisalObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vpmc_backend.Models.LandAssetType", "AssetType")
                        .WithMany("SurveyDataSheet")
                        .HasForeignKey("AssetTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vpmc_backend.Models.LandEvaluationRightsType", "EvaluationRightsType")
                        .WithMany("SurveyDataSheets")
                        .HasForeignKey("EvaluationRightsTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vpmc_backend.Models.LandLandRightsStatus", "LandRightsStatus")
                        .WithMany("SurveyDataSheets")
                        .HasForeignKey("LandRightsStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vpmc_backend.Models.LandPriceType", "PriceType")
                        .WithMany("SurveyDataSheets")
                        .HasForeignKey("PriceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("vpmc_backend.Models.ParkSurveyDataSheet", b =>
                {
                    b.HasOne("vpmc_backend.Models.ParkAppraisalObject", "AppraisalObject")
                        .WithMany("SurveyDataSheet")
                        .HasForeignKey("AppraisalObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vpmc_backend.Models.ParkAssetType", "AssetType")
                        .WithMany("SurveyDataSheet")
                        .HasForeignKey("AssetTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vpmc_backend.Models.ParkAssignMethod", "AssignMethod")
                        .WithMany("SurveyDataSheet")
                        .HasForeignKey("AssignMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vpmc_backend.Models.ParkBuildingRightsStatus", "BuildingRightsStatus")
                        .WithMany("SurveyDataSheet")
                        .HasForeignKey("BuildingRightsStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vpmc_backend.Models.ParkBuildingStructure", "BuildingStructure")
                        .WithMany("SurveyDataSheet")
                        .HasForeignKey("BuildingStructureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vpmc_backend.Models.ParkBuildingUsage", "BuildingUsage")
                        .WithMany("SurveyDataSheets")
                        .HasForeignKey("BuildingUsageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vpmc_backend.Models.ParkEvaluationRightsType", "EvaluationRightsType")
                        .WithMany("SurveyDataSheets")
                        .HasForeignKey("EvaluationRightsTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vpmc_backend.Models.ParkLandRightsStatus", "LandRightsStatus")
                        .WithMany("SurveyDataSheets")
                        .HasForeignKey("LandRightsStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vpmc_backend.Models.ParkMethod", "ParkMethod")
                        .WithMany("SurveyDataSheets")
                        .HasForeignKey("ParkMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vpmc_backend.Models.ParkType", "ParkType")
                        .WithMany("SurveyDataSheets")
                        .HasForeignKey("ParkTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vpmc_backend.Models.ParkPriceType", "PriceType")
                        .WithMany("SurveyDataSheets")
                        .HasForeignKey("PriceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}

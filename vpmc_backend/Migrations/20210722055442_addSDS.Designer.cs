// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using vpmc_backend.Models;

namespace vpmc_backend.Migrations
{
    [DbContext(typeof(WebApiContext))]
    [Migration("20210722055442_addSDS")]
    partial class addSDS
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("vpmc_backend.Models.AppraisalObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Object")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppraisalObject");
                });

            modelBuilder.Entity("vpmc_backend.Models.AssetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AssetType");
                });

            modelBuilder.Entity("vpmc_backend.Models.AssignMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Method")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AssignMethod");
                });

            modelBuilder.Entity("vpmc_backend.Models.BuildingRightsStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BuildingRightsStatus");
                });

            modelBuilder.Entity("vpmc_backend.Models.BuildingStructure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Structure")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BuildingStructure");
                });

            modelBuilder.Entity("vpmc_backend.Models.BuildingSurveyDataSheet", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AppraisalCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AppraisalDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AppraisalObjectId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BuildAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildAddressCounty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildAddressVillage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildMarkCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildMarkCounty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildMarkName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildMarkVillage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("BuildingArea")
                        .HasColumnType("float");

                    b.Property<double>("BuildingCoverageRatio")
                        .HasColumnType("float");

                    b.Property<int>("BuildingDownFloor")
                        .HasColumnType("int");

                    b.Property<DateTime>("BuildingFinishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BuildingRightsHolding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingRightsOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BuildingRightsStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("BuildingStructureId")
                        .HasColumnType("int");

                    b.Property<int>("BuildingUpFloor")
                        .HasColumnType("int");

                    b.Property<int?>("BuildingUsageId")
                        .HasColumnType("int");

                    b.Property<int?>("EvaluationRightsTypeId")
                        .HasColumnType("int");

                    b.Property<double>("FloorAreaRatio")
                        .HasColumnType("float");

                    b.Property<DateTime>("InspectionDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("LandArea")
                        .HasColumnType("float");

                    b.Property<string>("LandMarkCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandMarkCounty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandMarkName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandMarkVillage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandRightsHolding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandRightsOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LandRightsStatusId")
                        .HasColumnType("int");

                    b.Property<string>("LandUses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherRights")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PriceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("SurveyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SurveyFloor")
                        .HasColumnType("int");

                    b.Property<string>("SurveyorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranscriptPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ValueOpinionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppraisalObjectId");

                    b.HasIndex("AssetTypeId");

                    b.HasIndex("BuildingRightsStatusId");

                    b.HasIndex("BuildingStructureId");

                    b.HasIndex("BuildingUsageId");

                    b.HasIndex("EvaluationRightsTypeId");

                    b.HasIndex("LandRightsStatusId");

                    b.HasIndex("PriceTypeId");

                    b.ToTable("BuildingSurveyDataSheet");
                });

            modelBuilder.Entity("vpmc_backend.Models.BuildingUsage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Usage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BuildingUsage");
                });

            modelBuilder.Entity("vpmc_backend.Models.EvaluationRightsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EvaluationRightsType");
                });

            modelBuilder.Entity("vpmc_backend.Models.LandRightsStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LandRightsStatus");
                });

            modelBuilder.Entity("vpmc_backend.Models.LandSurveyDataSheet", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AppraisalCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AppraisalDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AppraisalObjectId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BuildAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildAddressCounty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildAddressVillage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildMarkCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildMarkCounty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildMarkName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildMarkVillage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("BuildingCoverageRatio")
                        .HasColumnType("float");

                    b.Property<int?>("EvaluationRightsTypeId")
                        .HasColumnType("int");

                    b.Property<double>("FloorAreaRatio")
                        .HasColumnType("float");

                    b.Property<DateTime>("InspectionDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("LandArea")
                        .HasColumnType("float");

                    b.Property<string>("LandMarkCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandMarkCounty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandMarkName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandMarkVillage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandRightsHolding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandRightsOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LandRightsStatusId")
                        .HasColumnType("int");

                    b.Property<string>("LandUses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherRights")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PriceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("SurveyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurveyorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranscriptPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ValueOpinionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppraisalObjectId");

                    b.HasIndex("AssetTypeId");

                    b.HasIndex("EvaluationRightsTypeId");

                    b.HasIndex("LandRightsStatusId");

                    b.HasIndex("PriceTypeId");

                    b.ToTable("LandSurveyDataSheet");
                });

            modelBuilder.Entity("vpmc_backend.Models.ParkMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Method")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ParkMethod");
                });

            modelBuilder.Entity("vpmc_backend.Models.ParkSurveyDataSheet", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("AllowSuv")
                        .HasColumnType("bit");

                    b.Property<string>("AppraisalCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AppraisalDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AppraisalObjectId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("AssignMethodId")
                        .HasColumnType("int");

                    b.Property<string>("BuildAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildAddressCounty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildAddressVillage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildMarkCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildMarkCounty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildMarkName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildMarkVillage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("BuildingCoverageRatio")
                        .HasColumnType("float");

                    b.Property<int>("BuildingDownFloor")
                        .HasColumnType("int");

                    b.Property<DateTime>("BuildingFinishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BuildingRightsHolding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingRightsOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BuildingRightsStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("BuildingStructureId")
                        .HasColumnType("int");

                    b.Property<int>("BuildingUpFloor")
                        .HasColumnType("int");

                    b.Property<int?>("BuildingUsageId")
                        .HasColumnType("int");

                    b.Property<int?>("EvaluationRightsTypeId")
                        .HasColumnType("int");

                    b.Property<double>("FloorAreaRatio")
                        .HasColumnType("float");

                    b.Property<DateTime>("InspectionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LandMarkCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandMarkCounty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandMarkName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandMarkVillage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandRightsHolding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandRightsOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LandRightsStatusId")
                        .HasColumnType("int");

                    b.Property<string>("LandUses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherRights")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ParkArea")
                        .HasColumnType("float");

                    b.Property<double>("ParkHeight")
                        .HasColumnType("float");

                    b.Property<int?>("ParkMethodId")
                        .HasColumnType("int");

                    b.Property<int?>("ParkTypeId")
                        .HasColumnType("int");

                    b.Property<double>("ParkWidth")
                        .HasColumnType("float");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PriceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("SurveyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SurveyFloor")
                        .HasColumnType("int");

                    b.Property<string>("SurveyorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranscriptPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ValueOpinionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppraisalObjectId");

                    b.HasIndex("AssetTypeId");

                    b.HasIndex("AssignMethodId");

                    b.HasIndex("BuildingRightsStatusId");

                    b.HasIndex("BuildingStructureId");

                    b.HasIndex("BuildingUsageId");

                    b.HasIndex("EvaluationRightsTypeId");

                    b.HasIndex("LandRightsStatusId");

                    b.HasIndex("ParkMethodId");

                    b.HasIndex("ParkTypeId");

                    b.HasIndex("PriceTypeId");

                    b.ToTable("ParkSurveyDataSheet");
                });

            modelBuilder.Entity("vpmc_backend.Models.ParkType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ParkType");
                });

            modelBuilder.Entity("vpmc_backend.Models.PriceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PriceType");
                });

            modelBuilder.Entity("vpmc_backend.Models.BuildingSurveyDataSheet", b =>
                {
                    b.HasOne("vpmc_backend.Models.AppraisalObject", "AppraisalObject")
                        .WithMany()
                        .HasForeignKey("AppraisalObjectId");

                    b.HasOne("vpmc_backend.Models.AssetType", "AssetType")
                        .WithMany()
                        .HasForeignKey("AssetTypeId");

                    b.HasOne("vpmc_backend.Models.BuildingRightsStatus", "BuildingRightsStatus")
                        .WithMany()
                        .HasForeignKey("BuildingRightsStatusId");

                    b.HasOne("vpmc_backend.Models.BuildingStructure", "BuildingStructure")
                        .WithMany()
                        .HasForeignKey("BuildingStructureId");

                    b.HasOne("vpmc_backend.Models.BuildingUsage", "BuildingUsage")
                        .WithMany()
                        .HasForeignKey("BuildingUsageId");

                    b.HasOne("vpmc_backend.Models.EvaluationRightsType", "EvaluationRightsType")
                        .WithMany()
                        .HasForeignKey("EvaluationRightsTypeId");

                    b.HasOne("vpmc_backend.Models.LandRightsStatus", "LandRightsStatus")
                        .WithMany()
                        .HasForeignKey("LandRightsStatusId");

                    b.HasOne("vpmc_backend.Models.PriceType", "PriceType")
                        .WithMany()
                        .HasForeignKey("PriceTypeId");
                });

            modelBuilder.Entity("vpmc_backend.Models.LandSurveyDataSheet", b =>
                {
                    b.HasOne("vpmc_backend.Models.AppraisalObject", "AppraisalObject")
                        .WithMany()
                        .HasForeignKey("AppraisalObjectId");

                    b.HasOne("vpmc_backend.Models.AssetType", "AssetType")
                        .WithMany()
                        .HasForeignKey("AssetTypeId");

                    b.HasOne("vpmc_backend.Models.EvaluationRightsType", "EvaluationRightsType")
                        .WithMany()
                        .HasForeignKey("EvaluationRightsTypeId");

                    b.HasOne("vpmc_backend.Models.LandRightsStatus", "LandRightsStatus")
                        .WithMany()
                        .HasForeignKey("LandRightsStatusId");

                    b.HasOne("vpmc_backend.Models.PriceType", "PriceType")
                        .WithMany()
                        .HasForeignKey("PriceTypeId");
                });

            modelBuilder.Entity("vpmc_backend.Models.ParkSurveyDataSheet", b =>
                {
                    b.HasOne("vpmc_backend.Models.AppraisalObject", "AppraisalObject")
                        .WithMany()
                        .HasForeignKey("AppraisalObjectId");

                    b.HasOne("vpmc_backend.Models.AssetType", "AssetType")
                        .WithMany()
                        .HasForeignKey("AssetTypeId");

                    b.HasOne("vpmc_backend.Models.AssignMethod", "AssignMethod")
                        .WithMany()
                        .HasForeignKey("AssignMethodId");

                    b.HasOne("vpmc_backend.Models.BuildingRightsStatus", "BuildingRightsStatus")
                        .WithMany()
                        .HasForeignKey("BuildingRightsStatusId");

                    b.HasOne("vpmc_backend.Models.BuildingStructure", "BuildingStructure")
                        .WithMany()
                        .HasForeignKey("BuildingStructureId");

                    b.HasOne("vpmc_backend.Models.BuildingUsage", "BuildingUsage")
                        .WithMany()
                        .HasForeignKey("BuildingUsageId");

                    b.HasOne("vpmc_backend.Models.EvaluationRightsType", "EvaluationRightsType")
                        .WithMany()
                        .HasForeignKey("EvaluationRightsTypeId");

                    b.HasOne("vpmc_backend.Models.LandRightsStatus", "LandRightsStatus")
                        .WithMany()
                        .HasForeignKey("LandRightsStatusId");

                    b.HasOne("vpmc_backend.Models.ParkMethod", "ParkMethod")
                        .WithMany()
                        .HasForeignKey("ParkMethodId");

                    b.HasOne("vpmc_backend.Models.ParkType", "ParkType")
                        .WithMany()
                        .HasForeignKey("ParkTypeId");

                    b.HasOne("vpmc_backend.Models.PriceType", "PriceType")
                        .WithMany()
                        .HasForeignKey("PriceTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
